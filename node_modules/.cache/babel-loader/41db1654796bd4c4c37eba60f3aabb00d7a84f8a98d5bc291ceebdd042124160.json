{"ast":null,"code":"import _objectSpread from \"/Users/apple/Desktop/todo-mvc/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport useTodoList from \"./composition/useTodoList\";\nimport useNewTodo from \"./composition/useNewTodo\";\nimport useFilter from \"./composition/useFilter\";\nimport useEditTodo from \"./composition/useEditTodo\";\nexport default {\n  setup: function setup() {\n    var _useTodoList = useTodoList(),\n      todosRef = _useTodoList.todosRef;\n    return _objectSpread(_objectSpread(_objectSpread({\n      todosRef: todosRef\n    }, useNewTodo(todosRef)), useFilter(todosRef)), useEditTodo(todosRef));\n  }\n};","map":{"version":3,"names":["useTodoList","useNewTodo","useFilter","useEditTodo","setup","_useTodoList","todosRef","_objectSpread"],"sources":["/Users/apple/Desktop/todo-mvc/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <section class=\"todoapp\">\n      <header class=\"header\">\n        <h1>todos</h1>\n        <input\n          class=\"new-todo\"\n          autofocus=\"\"\n          autocomplete=\"off\"\n          placeholder=\"What needs to be done?\"\n          v-model=\"newTodoRef\"\n          @keyup.enter=\"addTodo\"\n        />\n      </header>\n      <section class=\"main\">\n        <input\n          id=\"toggle-all\"\n          class=\"toggle-all\"\n          type=\"checkbox\"\n          :checked=\"allDoneRef\"\n          @input=\"setAllChecked($event.target.checkbox)\"\n        />\n        <label for=\"toggle-all\">Mark all as complete</label>\n        <ul class=\"todo-list\">\n          <li\n            class=\"todo\"\n            :class=\"{ completed: todo.completed }\"\n            v-for=\"todo in filteredTodosRef\"\n            :key=\"todo.id\"\n          >\n            <div class=\"view\">\n              <input class=\"toggle\" type=\"checkbox\" v-model=\"todo.completed\" />\n              <label @dblclick=\"editTodo(todo)\">{{ todo.title }}</label>\n              <button class=\"destroy\"></button>\n            </div>\n            <input\n              v-model=\"todo.title\"\n              @blur=\"doneEdit\"\n              @keyup.enter=\"doneEdit\"\n              @keyup.escape=\"cancelEdit(todo)\"\n              class=\"edit\"\n              type=\"text\"\n            />\n          </li>\n        </ul>\n      </section>\n      <footer class=\"footer\">\n        <span class=\"todo-count\">\n          <strong>{{ remainingRef }}</strong>\n          <span>item{{ remainingRef === 1 ? \"\" : \"s\" }} left</span>\n        </span>\n        <ul class=\"filters\">\n          <li>\n            <a href=\"#/all\" :class=\"{ selected: visibilityRef === 'all' }\"\n              >All</a\n            >\n          </li>\n          <li>\n            <a href=\"#/active\" :class=\"{ selected: visibilityRef === 'active' }\"\n              >Active</a\n            >\n          </li>\n          <li>\n            <a\n              href=\"#/completed\"\n              :class=\"{ selected: visibilityRef === 'completed' }\"\n              >Completed</a\n            >\n          </li>\n        </ul>\n        <button\n          class=\"clear-completed\"\n          style=\"display: none\"\n          v-show=\"completedRef > 0\"\n        >\n          Clear completed\n        </button>\n      </footer>\n    </section>\n  </div>\n</template>\n\n<script>\nimport useTodoList from \"./composition/useTodoList\";\nimport useNewTodo from \"./composition/useNewTodo\";\nimport useFilter from \"./composition/useFilter\";\nimport useEditTodo from \"./composition/useEditTodo\";\nexport default {\n  setup() {\n    const { todosRef } = useTodoList();\n\n    return {\n      todosRef,\n      ...useNewTodo(todosRef),\n      ...useFilter(todosRef),\n      ...useEditTodo(todosRef),\n    };\n  },\n};\n</script>\n\n<style></style>\n"],"mappings":";AAmFA,OAAOA,WAAU,MAAO,2BAA2B;AACnD,OAAOC,UAAS,MAAO,0BAA0B;AACjD,OAAOC,SAAQ,MAAO,yBAAyB;AAC/C,OAAOC,WAAU,MAAO,2BAA2B;AACnD,eAAe;EACbC,KAAK,WAAAA,MAAA,EAAG;IACN,IAAAC,YAAA,GAAqBL,WAAW,CAAC,CAAC;MAA1BM,QAAO,GAAAD,YAAA,CAAPC,QAAO;IAEf,OAAAC,aAAA,CAAAA,aAAA,CAAAA,aAAA;MACED,QAAQ,EAARA;IAAQ,GACLL,UAAU,CAACK,QAAQ,CAAC,GACpBJ,SAAS,CAACI,QAAQ,CAAC,GACnBH,WAAW,CAACG,QAAQ,CAAC;EAE5B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}