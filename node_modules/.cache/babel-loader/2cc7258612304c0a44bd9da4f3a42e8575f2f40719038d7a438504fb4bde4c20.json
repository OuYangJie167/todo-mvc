{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, vShow as _vShow } from \"vue\";\nvar _hoisted_1 = {\n  id: \"app\"\n};\nvar _hoisted_2 = {\n  \"class\": \"todoapp\"\n};\nvar _hoisted_3 = {\n  \"class\": \"header\"\n};\nvar _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"todos\", -1 /* HOISTED */);\nvar _hoisted_5 = {\n  \"class\": \"main\"\n};\nvar _hoisted_6 = /*#__PURE__*/_createElementVNode(\"input\", {\n  id: \"toggle-all\",\n  \"class\": \"toggle-all\",\n  type: \"checkbox\"\n}, null, -1 /* HOISTED */);\nvar _hoisted_7 = /*#__PURE__*/_createElementVNode(\"label\", {\n  \"for\": \"toggle-all\"\n}, \"Mark all as complete\", -1 /* HOISTED */);\nvar _hoisted_8 = {\n  \"class\": \"todo-list\"\n};\nvar _hoisted_9 = {\n  \"class\": \"view\"\n};\nvar _hoisted_10 = [\"onUpdate:modelValue\"];\nvar _hoisted_11 = /*#__PURE__*/_createElementVNode(\"button\", {\n  \"class\": \"destroy\"\n}, null, -1 /* HOISTED */);\nvar _hoisted_12 = /*#__PURE__*/_createElementVNode(\"input\", {\n  \"class\": \"edit\",\n  type: \"text\"\n}, null, -1 /* HOISTED */);\nvar _hoisted_13 = {\n  \"class\": \"footer\"\n};\nvar _hoisted_14 = {\n  \"class\": \"todo-count\"\n};\nvar _hoisted_15 = {\n  \"class\": \"filters\"\n};\nvar _hoisted_16 = {\n  \"class\": \"clear-completed\",\n  style: {\n    \"display\": \"none\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"section\", _hoisted_2, [_createElementVNode(\"header\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    \"class\": \"new-todo\",\n    autofocus: \"\",\n    autocomplete: \"off\",\n    placeholder: \"What needs to be done?\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return _ctx.newTodoRef = $event;\n    }),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys(function () {\n      return _ctx.addTodo && _ctx.addTodo.apply(_ctx, arguments);\n    }, [\"enter\"]))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, _ctx.newTodoRef]])]), _createElementVNode(\"section\", _hoisted_5, [_hoisted_6, _hoisted_7, _createElementVNode(\"ul\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.filteredTodosRef, function (todo) {\n    return _openBlock(), _createElementBlock(\"li\", {\n      \"class\": _normalizeClass([\"todo\", {\n        completed: todo.completed\n      }]),\n      key: todo.id\n    }, [_createElementVNode(\"div\", _hoisted_9, [_withDirectives(_createElementVNode(\"input\", {\n      \"class\": \"toggle\",\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n        return todo.completed = $event;\n      }\n    }, null, 8 /* PROPS */, _hoisted_10), [[_vModelCheckbox, todo.completed]]), _createElementVNode(\"label\", null, _toDisplayString(todo.title), 1 /* TEXT */), _hoisted_11]), _hoisted_12], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"footer\", _hoisted_13, [_createElementVNode(\"span\", _hoisted_14, [_createElementVNode(\"strong\", null, _toDisplayString(_ctx.remainingRef), 1 /* TEXT */), _createElementVNode(\"span\", null, \"item\" + _toDisplayString(_ctx.remainingRef === 1 ? \"\" : \"s\") + \" left\", 1 /* TEXT */)]), _createElementVNode(\"ul\", _hoisted_15, [_createElementVNode(\"li\", null, [_createElementVNode(\"a\", {\n    href: \"#/all\",\n    \"class\": _normalizeClass({\n      selected: _ctx.visibilityRef === 'all'\n    })\n  }, \"All\", 2 /* CLASS */)]), _createElementVNode(\"li\", null, [_createElementVNode(\"a\", {\n    href: \"#/active\",\n    \"class\": _normalizeClass({\n      selected: _ctx.visibilityRef === 'active'\n    })\n  }, \"Active\", 2 /* CLASS */)]), _createElementVNode(\"li\", null, [_createElementVNode(\"a\", {\n    href: \"#/completed\",\n    \"class\": _normalizeClass({\n      selected: _ctx.visibilityRef === 'completed'\n    })\n  }, \"Completed\", 2 /* CLASS */)])]), _withDirectives(_createElementVNode(\"button\", _hoisted_16, \" Clear completed \", 512 /* NEED_PATCH */), [[_vShow, _ctx.completedRef > 0]])])])]);\n}","map":{"version":3,"names":["id","_createElementVNode","type","style","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","autofocus","autocomplete","placeholder","_cache","$event","_ctx","newTodoRef","onKeyup","_withKeys","addTodo","apply","arguments","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_Fragment","_renderList","filteredTodosRef","todo","_normalizeClass","completed","key","_hoisted_9","onUpdateModelValue","_hoisted_10","_toDisplayString","title","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","remainingRef","_hoisted_15","href","selected","visibilityRef","_hoisted_16","completedRef"],"sources":["/Users/apple/Desktop/todo-mvc/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <section class=\"todoapp\">\n      <header class=\"header\">\n        <h1>todos</h1>\n        <input\n          class=\"new-todo\"\n          autofocus=\"\"\n          autocomplete=\"off\"\n          placeholder=\"What needs to be done?\"\n          v-model=\"newTodoRef\"\n          @keyup.enter=\"addTodo\"\n        />\n      </header>\n      <section class=\"main\">\n        <input id=\"toggle-all\" class=\"toggle-all\" type=\"checkbox\" />\n        <label for=\"toggle-all\">Mark all as complete</label>\n        <ul class=\"todo-list\">\n          <li\n            class=\"todo\"\n            :class=\"{ completed: todo.completed }\"\n            v-for=\"todo in filteredTodosRef\"\n            :key=\"todo.id\"\n          >\n            <div class=\"view\">\n              <input class=\"toggle\" type=\"checkbox\" v-model=\"todo.completed\" />\n              <label>{{ todo.title }}</label>\n              <button class=\"destroy\"></button>\n            </div>\n            <input class=\"edit\" type=\"text\" />\n          </li>\n        </ul>\n      </section>\n      <footer class=\"footer\">\n        <span class=\"todo-count\">\n          <strong>{{ remainingRef }}</strong>\n          <span>item{{ remainingRef === 1 ? \"\" : \"s\" }} left</span>\n        </span>\n        <ul class=\"filters\">\n          <li>\n            <a href=\"#/all\" :class=\"{ selected: visibilityRef === 'all' }\"\n              >All</a\n            >\n          </li>\n          <li>\n            <a href=\"#/active\" :class=\"{ selected: visibilityRef === 'active' }\"\n              >Active</a\n            >\n          </li>\n          <li>\n            <a\n              href=\"#/completed\"\n              :class=\"{ selected: visibilityRef === 'completed' }\"\n              >Completed</a\n            >\n          </li>\n        </ul>\n        <button\n          class=\"clear-completed\"\n          style=\"display: none\"\n          v-show=\"completedRef > 0\"\n        >\n          Clear completed\n        </button>\n      </footer>\n    </section>\n  </div>\n</template>\n\n<script>\nimport useTodoList from \"./composition/useTodoList\";\nimport useNewTodo from \"./composition/useNewTodo\";\nimport useFilter from \"./composition/useFilter\";\nimport useEditTodo from \"./composition/useEditTodo\";\nexport default {\n  setup() {\n    const { todosRef } = useTodoList();\n\n    return {\n      todosRef,\n      ...useNewTodo(todosRef),\n      ...useFilter(todosRef),\n    };\n  },\n};\n</script>\n\n<style></style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}